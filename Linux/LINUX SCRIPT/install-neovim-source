Build prerequisites
General requirements (see #1469):
1. Clang or GCC version 4.9+
1. CMake version 3.10+, built with TLS/SSL support
   Optional: Get the latest CMake from an installer or the Python package (pip install cmake)

Platform-specific requirements are listed below.

I. Ubuntu / Debian
sudo apt-get install ninja-build gettext cmake unzip curl

II. CentOS / RHEL / Fedora
sudo dnf -y install ninja-build cmake gcc make unzip gettext curl

III. Arch Linux
sudo pacman -S base-devel cmake unzip ninja curl

IV. openSUSE
sudo zypper install ninja cmake gcc-c++ gettext-tools curl

V. Void Linux
xbps-install base-devel cmake curl git

VI. NixOS / Nix
1. Starting from NixOS 18.03, the Neovim binary resides in the neovim-unwrapped Nix package 
(the neovim package being just a wrapper to setup runtime options like Ruby/Python support):
cd path/to/neovim/src
2. Drop into nix-shell to pull in the Neovim dependencies:
nix-shell '<nixpkgs>' -A neovim-unwrapped
3. Configure and build 
rm -rf build && cmakeConfigurePhase
buildPhase
4. Tests are not available by default, because of some unfixed failures.
You can enable them via adding this package in your overlay:
  neovim-dev = (super.pkgs.neovim-unwrapped.override  {
    doCheck=true;
  }).overrideAttrs(oa:{
    cmakeBuildType="debug";

    nativeBuildInputs = oa.nativeBuildInputs ++ [ self.pkgs.valgrind ];
    shellHook = ''
      export NVIM_PYTHON_LOG_LEVEL=DEBUG
      export NVIM_LOG_FILE=/tmp/log
      export VALGRIND_LOG="$PWD/valgrind.log"
    '';
  });
and replacing neovim-unwrapped with neovim-dev:
nix-shell '<nixpkgs>' -A neovim-dev
5. Neovim contains a Nix flake in the contrib folder, with 3 packages:

    neovim to run the nightly
    neovim-debug to run the package with debug symbols
    neovim-developer to get all the tools to develop on neovim

Thus you can run Neovim nightly with:
nix run github:neovim/neovim?dir=contrib. Similarly to develop on Neovim: nix develop github:neovim/neovim?dir=contrib#neovim-developer.
